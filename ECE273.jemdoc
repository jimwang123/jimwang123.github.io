# jemdoc: title{ECE273 - UC San Diego}

= ECE 273, Spring 2024 -- Convex Optimization and Applications


*Lectures*: TBD

*Location*: TBD

*Instructors*: 
- [https://jimwang123.github.io Jun-Kun Wang] (jkw005 at ucsd.edu)


*Office hours*:
- TBD

*Syllabus*: Available on Canvas

== Course description
This course covers the theoretical and algorithmic foundations of optimization.
We will walk through classical optimization algorithms such as Gradient Descent, Coordinate
Descent, the Frank-Wolfe Method, Accelerated Methods, Mirror Descent, Stochastic Gradient
Descent, and Online Gradient Descent. We will put particular emphasis on understanding the
behaviors and the convergence rate guarantees of these algorithms, as well as the tools and techniques
to analyze them. We will also cover some convex analysis and duality theory. Students will
learn the basic foundations of deterministic convex optimization, stochastic optimization, online
convex optimization, min-max optimization, and non-convex optimization


A tentative list of topics that we will cover include

- Mathematical background and Gradient Flow.
- Convexity. 
- Gradient Descent for smooth, smooth and strongly convex functions.
- Reduction
- Projected Gradient Descent and Frank-Wolfe Method.
- Coordinate Descent
- Duality Theory; Stochastic Dual Coordinate Ascent
- Mirror Descent
- SGD
- SGD and variance reduction
- Online Convex Optimization
- Min-Max Optimization
- Nonconvex optimization 
- Acceleration via the Chebyshev Polynomial
- Momentum Methods
- Newton Method


Students are expected to sign up on Piazza and GradeScope. Discussions will happen on Piazza. The homework should be turned in and will be graded on GradeScope. Important announcements will be made via Canvas. 


== Pre-requisites
This course assumes basic knowledge in linear algebra and calculus. 

== Course grade
- 40\% homework (5 problem sets; will drop the lowest score)
- 25\% midterm exam (in class; one page of hand-written cheat sheet allowed)
- 25\% final exam
- 10\% scribing and 5\% extra credit for course attendance/participation


== Homework Policy

Students can work with up to two other classmates on the homeworks. 
However, the solutions submitted must be independently written in your own words.
As a hard rule, you must write up your solution individually and cannot copy your classmates' solutions or let your classmates copy your solutions; otherwise, you may not receive any credit for the HW problem(s). You must write your collaborators’ names on the top of your assignment. If you do not work with collaborators, list “Collaborators: None.”

Students are encouraged to submit a typed solution. Written solutions are allowed but have to be clearly readable. Students might not receive credit for the problems if the written solutions are incomprehensible. We reserve the right to determine if a written solution is incomprehensible.

Each homework and project assignment will have a clearly stated due date. We expect you to turn in all completed problem sets on time. Late submissions and deadline extensions will not be possible for any reason.


== Scribe Policy

Starting from the second lecture, each lecture will have two to three students to scribe. This group of students will be responsible for taking detailed notes in class, and the quality of these notes will be graded. There will be a sign-up sheet for students to sign up to scribe for a preferred date.

Students should use the provided scribe template available on Canvas and email a typed PDF file with the LaTeX code within 7 days to the TA. The TA will review the scribe and may request students to make updates if any part of the notes is unclear or contains errors. It is expected that students revise the scribe accordingly within 2 days. Students will receive no more than one request if there are issues in the scribe. If students do not address the issues or errors in the scribe timely, 
then TAs may update the scribe; in this case, students may not receive full credit. 

== Academic Integrity

[https://academicintegrity.ucsd.edu/ UCSD's Code of Academic Integrity] applies to this course. It is dishonest to cheat on exams, copy other people's work, or fake experimental results. An important element of academic integrity is fully and correctly acknowledging any materials taken from the work of others. Instances of academic dishonesty will be referred to the Office of Student Conduct for adjudication.


== References

There is no required textbooks. The course will draw some of the materials from the following references. All the following materials are accessible online or accessible via UCSD library online portal. 

- Sebastien Bubeck [https://arxiv.org/pdf/1405.4980.pdf Semidefinite optimization andconvex algebraic geometry]. 

- Nisheeth K. Vishnoi [https://convex-optimization.github.io/  Algorithms for Convex Optimization]

- Francesco Orabona [https://arxiv.org/pdf/1912.13213.pdf A Modern Introduction to Online Learning]

- Aaron Sidford [https://drive.google.com/file/d/1BfMkt2glaZpJGwg7gwsJw9T_XxH3o8gx/view Optimization Algorithms]

- Stephen Boyd and Lieven Vandenberghe [https://web.stanford.edu/~boyd/cvxbook/ Convex Optimization]

- Yin Tat Lee and Santosh Vempala [https://github.com/YinTat/optimizationbook/blob/main/main.pdf Techniques in Optimization and Sampling]

- Arkadi Nemirovski [https://www2.isye.gatech.edu/~nemirovs/LMCOLN2022Fall.pdf Lectures on Modern Convex Optimization]

- Elad Hazan [https://arxiv.org/pdf/1909.05207.pdf Introduction to Online Convex Optimization]

- Alexandre d'Aspremont, Damien Scieur, Adrien Taylor [https://arxiv.org/abs/2101.09545.pdf Acceleration Methods]

- Benjamin Recht and Stephen J. Wright [https://people.eecs.berkeley.edu/~brecht/opt4ml_book/ Optimization for Modern Data Analysis]

- Guanghui Lan [https://link.springer.com/book/10.1007/978-3-030-39568-1 First-order and Stochastic Optimization Methods for Machine Learning]

- Yurii Nesterov [https://link.springer.com/book/10.1007/978-1-4419-8853-9 Introductory Lectures on Convex Optimization]

- Amir Beck [https://epubs.siam.org/doi/book/10.1137/1.9781611977622 Introduction to Nonlinear Optimization - Theory, Algorithms and Applications]

== Acknowledgments

The design of this course is inspired by the following excellent courses:

- [https://ee227c.github.io/ Convex Optimization and Approximation] at UC Berkeley by Moritz Hardt. 

- [https://yuxinchen2020.github.io/large_scale_optimization/index.html Large-Scale Optimization for Data Science] at University of Pennsylvania by Yuxin Chen. 

- [https://optmlclass.github.io/ Optimization for Machine Learning] at Boston University by Ashok Cutkosky.

The course webpage and the course policy is inspired by the following excellent courses:

- [https://zhengy09.github.io/ECE285/ece285.html Semidefinite and Sum-of-squares Optimization] at UC San Diego by Yang Zheng
- [https://mltheory.github.io/CS7545/ Machine Learning Theory] at Georgia Tech by Jacob Abernethy
